"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[72185],{18508:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>a,contentTitle:()=>i,default:()=>c,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.ovf","title":"org.osbuild.ovf","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.ovf.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.ovf","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ovf","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ovf.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ovf.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.ostree.sign","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.sign"},"next":{"title":"org.osbuild.pacman-keyring","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.pacman-keyring"}}');var n=s(74848),t=s(28453);const d={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ovf.meta.json"},i="org.osbuild.ovf",a={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"orgosbuildovf",children:"org.osbuild.ovf"})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.strong,{children:"Create OVF descriptor and manifest"})}),"\n",(0,n.jsxs)(o.p,{children:["Generates a OVF descriptor (xml) for a vmdk intended for vSphere.\nThe OVF descriptor has minimal virtual hardware and no network.\nHardware and network can be configured during or after importing\ninto vSphere.\nBuildhost commands used: ",(0,n.jsx)(o.code,{children:"qemu-img"}),"."]}),"\n",(0,n.jsx)(o.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-json",children:"{}\n"})}),"\n",(0,n.jsx)(o.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-json",children:'{\n  "options": {\n    "additionalProperties": false,\n    "required": [\n      "vmdk"\n    ],\n    "properties": {\n      "vmdk": {\n        "description": "The vmdk image filename present in the root of the tree",\n        "type": "string",\n        "pattern": "[a-zA-Z0-9+_.-]+.vmdk"\n      }\n    }\n  }\n}\n'})})]})}function c(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,o,s)=>{s.d(o,{R:()=>d,x:()=>i});var r=s(96540);const n={},t=r.createContext(n);function d(e){const o=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(t.Provider,{value:o},e.children)}}}]);