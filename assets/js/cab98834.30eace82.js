"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[7821],{89197:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"on-premises/installation/index","title":"Installation and configuration","description":"To get started with osbuild-composer on your local machine, you can install the CLI interface or the Web UI, which is part of Cockpit project.","source":"@site/docs/on-premises/01-installation/index.md","sourceDirName":"on-premises/01-installation","slug":"/on-premises/installation/","permalink":"/docs/on-premises/installation/","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild.github.io/tree/main/docs/on-premises/01-installation/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"onPremises","previous":{"title":"Releases","permalink":"/docs/on-premises/overview/release-overview"},"next":{"title":"Container registry credentials","permalink":"/docs/on-premises/installation/container-auth"}}');var i=s(74848),t=s(28453);const r={},c="Installation and configuration",l={},a=[{value:"CLI interface",id:"cli-interface",level:2},{value:"Web UI",id:"web-ui",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installation-and-configuration",children:"Installation and configuration"})}),"\n",(0,i.jsxs)(n.p,{children:["To get started with ",(0,i.jsx)(n.code,{children:"osbuild-composer"})," on your local machine, you can install the CLI interface or the Web UI, which is part of Cockpit project."]}),"\n",(0,i.jsx)(n.h2,{id:"cli-interface",children:"CLI interface"}),"\n",(0,i.jsx)(n.p,{children:"For CLI only, run the following command to install necessary packages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo dnf install osbuild-composer composer-cli\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(n.code,{children:"composer-cli"})," is a virtual provides for the actual package name, which is ",(0,i.jsx)(n.code,{children:"weldr-client"})," for historical reasons."]}),"\n",(0,i.jsx)(n.p,{children:"To enable the service, run this command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo systemctl enable --now osbuild-composer.socket\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Verify that the installation works by running ",(0,i.jsx)(n.code,{children:"composer-cli"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo composer-cli status show\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you prefer to run this command without sudo privileges, add your user to the ",(0,i.jsx)(n.code,{children:"weldr"})," group:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo usermod -a -G weldr <user>\n$ newgrp weldr\n"})}),"\n",(0,i.jsx)(n.h2,{id:"web-ui",children:"Web UI"}),"\n",(0,i.jsx)(n.p,{children:"If you prefer the Web UI interface, known as an Image Builder, install the following package:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo dnf install cockpit-composer\n"})}),"\n",(0,i.jsxs)(n.p,{children:["and enable ",(0,i.jsx)(n.code,{children:"cockpit"})," and ",(0,i.jsx)(n.code,{children:"osbuild-composer"})," services:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo systemctl enable --now osbuild-composer.socket\n$ sudo systemctl enable --now cockpit.socket\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var o=s(96540);const i={},t=o.createContext(i);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);