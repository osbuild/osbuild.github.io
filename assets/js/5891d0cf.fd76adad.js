"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[4557],{31:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.udev.rules","title":"org.osbuild.udev.rules","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.udev.rules.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.udev.rules","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.udev.rules","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.udev.rules.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.udev.rules.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.tuned","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.tuned"},"next":{"title":"org.osbuild.uki","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.uki"}}');var t=s(74848),i=s(28453);const o={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.udev.rules.meta.json"},a="org.osbuild.udev.rules",d={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"orgosbuildudevrules",children:"org.osbuild.udev.rules"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Create a udev rules file"})}),"\n",(0,t.jsxs)(e.p,{children:["The stage accepts a list of rules, each rule consisting of a list of\nkey-operator-value triples. Keys can be strings or objects that take\na ",(0,t.jsx)(e.code,{children:"name"})," property. Some keys need an argument, which is encoded in\nthe key object via the ",(0,t.jsx)(e.code,{children:"arg"})," property. Operators are strings. Values\nare also strings; any '\"' characters are escaped with '\"'.\nSee udev(7) man page for more information about valid keys, their\narguments and values.\nNB: not all udev constrains are enforced, i.e. the argument to keys\nand the possible keys for the ",(0,t.jsx)(e.code,{children:"OPTIONS"})," assignment are not checked."]}),"\n",(0,t.jsx)(e.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "definitions": {\n    "value": {\n      "type": "string"\n    },\n    "keys-match-simple": {\n      "type": "string",\n      "enum": [\n        "ACTION",\n        "DEVPATH",\n        "KERNEL",\n        "KERNELS",\n        "NAME",\n        "SYMLINK",\n        "SUBSYSTEM",\n        "SUBSYSTEMS",\n        "DRIVER",\n        "DRIVERS",\n        "TAG",\n        "TAGS",\n        "PROGRAM",\n        "RESULT"\n      ]\n    },\n    "keys-match-noarg": {\n      "type": "object",\n      "additionalProperties": false,\n      "required": [\n        "name"\n      ],\n      "properties": {\n        "name": {\n          "$ref": "#/definitions/keys-match-simple"\n        }\n      }\n    },\n    "keys-match-arg": {\n      "type": "object",\n      "additionalProperties": false,\n      "required": [\n        "name",\n        "arg"\n      ],\n      "properties": {\n        "name": {\n          "type": "string",\n          "enum": [\n            "ATTR",\n            "ATTRS",\n            "SYSCTL",\n            "ENV",\n            "CONST",\n            "TEST"\n          ]\n        },\n        "arg": {\n          "type": "string"\n        }\n      }\n    },\n    "keys-assign-simple": {\n      "type": "string",\n      "enum": [\n        "NAME",\n        "SYMLINK",\n        "OWNER",\n        "GROUP",\n        "MODE",\n        "TAG",\n        "LABEL",\n        "GOTO",\n        "OPTIONS"\n      ]\n    },\n    "keys-assign-noarg": {\n      "type": "object",\n      "additionalProperties": false,\n      "required": [\n        "name"\n      ],\n      "properties": {\n        "name": {\n          "$ref": "#/definitions/keys-assign-simple"\n        }\n      }\n    },\n    "keys-assign-arg": {\n      "type": "object",\n      "additionalProperties": false,\n      "required": [\n        "name",\n        "arg"\n      ],\n      "properties": {\n        "name": {\n          "type": "string",\n          "enum": [\n            "SECLABEL",\n            "ATTR",\n            "SYSCTL",\n            "ENV",\n            "RUN",\n            "IMPORT"\n          ]\n        },\n        "arg": {\n          "type": "string"\n        }\n      }\n    },\n    "match": {\n      "required": [\n        "op",\n        "key",\n        "val"\n      ],\n      "type": "object",\n      "additionalProperties": false,\n      "properties": {\n        "op": {\n          "type": "string",\n          "enum": [\n            "==",\n            "!="\n          ]\n        },\n        "val": {\n          "$ref": "#/definitions/value"\n        },\n        "key": {\n          "oneOf": [\n            {\n              "$ref": "#/definitions/keys-match-simple"\n            },\n            {\n              "$ref": "#/definitions/keys-match-noarg"\n            },\n            {\n              "$ref": "#/definitions/keys-match-arg"\n            }\n          ]\n        }\n      }\n    },\n    "assignment": {\n      "type": "object",\n      "required": [\n        "key",\n        "op",\n        "val"\n      ],\n      "additionalProperties": false,\n      "properties": {\n        "key": {\n          "oneOf": [\n            {\n              "$ref": "#/definitions/keys-assign-simple"\n            },\n            {\n              "$ref": "#/definitions/keys-assign-noarg"\n            },\n            {\n              "$ref": "#/definitions/keys-assign-arg"\n            }\n          ]\n        },\n        "op": {\n          "type": "string",\n          "enum": [\n            "=",\n            "+=",\n            "-=",\n            ":="\n          ]\n        },\n        "val": {\n          "$ref": "#/definitions/value"\n        }\n      }\n    },\n    "comment": {\n      "type": "object",\n      "required": [\n        "comment"\n      ],\n      "additionalProperties": false,\n      "properties": {\n        "comment": {\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        }\n      }\n    }\n  },\n  "additionalProperties": false,\n  "required": [\n    "rules",\n    "filename"\n  ],\n  "properties": {\n    "filename": {\n      "type": "string",\n      "description": "Name of the udev rules file",\n      "pattern": "^[.\\\\/\\\\w\\\\-_]{1,250}.rules$"\n    },\n    "rules": {\n      "additionalProperties": false,\n      "type": "array",\n      "description": "Array of udev rules",\n      "minLength": 1,\n      "items": {\n        "oneOf": [\n          {\n            "$ref": "#/definitions/comment"\n          },\n          {\n            "type": "array",\n            "minLength": 1,\n            "items": {\n              "oneOf": [\n                {\n                  "$ref": "#/definitions/match"\n                },\n                {\n                  "$ref": "#/definitions/assignment"\n                }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:"{}\n"})})]})}function c(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>a});var r=s(96540);const t={},i=r.createContext(t);function o(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);