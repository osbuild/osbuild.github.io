"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[6716],{74209:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.commit","title":"org.osbuild.ostree.commit","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.ostree.commit.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.commit","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.commit","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.commit.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.commit.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.ostree.aleph","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.aleph"},"next":{"title":"org.osbuild.ostree.config","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.config"}}');var n=s(74848),r=s(28453);const i={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.commit.meta.json"},d="org.osbuild.ostree.commit",a={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"orgosbuildostreecommit",children:"org.osbuild.ostree.commit"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Assemble a file system tree into a ostree commit"})}),"\n",(0,n.jsxs)(t.p,{children:["Needs a file system tree that is already conforming to the ostree\nsystem layout[1], specified via the ",(0,n.jsx)(t.code,{children:"tree"})," input and commits it\nto a repository. The repository must have been created at ",(0,n.jsx)(t.code,{children:"/repo"}),".\nAdditional metadata is stored in ",(0,n.jsx)(t.code,{children:"/compose.json"})," which contains\nthe commit compose information. This is also returned via the\nmetadata API to osbuild.\n[1] ",(0,n.jsx)(t.a,{href:"https://ostree.readthedocs.io/en/stable/manual/adapting-existing/",children:"https://ostree.readthedocs.io/en/stable/manual/adapting-existing/"})]}),"\n",(0,n.jsx)(t.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:"{}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "options": {\n    "additionalProperties": false,\n    "required": [\n      "ref"\n    ],\n    "properties": {\n      "ref": {\n        "description": "OStree ref to create for the commit",\n        "type": "string",\n        "default": ""\n      },\n      "os_version": {\n        "description": "Set the version of the OS as commit metadata",\n        "type": "string"\n      },\n      "parent": {\n        "description": "commit id of the parent commit",\n        "type": "string"\n      },\n      "selinux-label-version": {\n        "description": "Set selinux label version",\n        "type": "integer",\n        "default": 0\n      }\n    }\n  },\n  "inputs": {\n    "type": "object",\n    "additionalProperties": false,\n    "required": [\n      "tree"\n    ],\n    "properties": {\n      "tree": {\n        "type": "object",\n        "additionalProperties": true\n      }\n    }\n  }\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>d});var o=s(96540);const n={},r=o.createContext(n);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);