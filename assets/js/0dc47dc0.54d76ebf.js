"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[594],{83599:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"user-guide/uploading-cloud-images/uploading-to-aws","title":"Uploading an image to AWS","description":"osbuild-composer provides the users with a convenient way to upload images directly to AWS right after the image is built. Before you can use this feature, you have to define vmimport IAM role in your AWS account. See VM Import/Export Requirements in AWS documentation.","source":"@site/docs/user-guide/04-uploading-cloud-images/01-uploading-to-aws.md","sourceDirName":"user-guide/04-uploading-cloud-images","slug":"/user-guide/uploading-cloud-images/uploading-to-aws","permalink":"/docs/user-guide/uploading-cloud-images/uploading-to-aws","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild.github.io/tree/main/docs/user-guide/04-uploading-cloud-images/01-uploading-to-aws.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"userguide","previous":{"title":"Uploading cloud images","permalink":"/docs/user-guide/uploading-cloud-images/"},"next":{"title":"Uploading an image to an AWS S3 Bucket","permalink":"/docs/user-guide/uploading-cloud-images/uploading-to-aws-s3"}}');var t=i(74848),s=i(28453);const r={},a="Uploading an image to AWS",d={},c=[{value:"General Syntax",id:"general-syntax",level:2}];function l(e){const o={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"uploading-an-image-to-aws",children:"Uploading an image to AWS"})}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"osbuild-composer"})," provides the users with a convenient way to upload images directly to AWS right after the image is built. Before you can use this feature, you have to define ",(0,t.jsx)(o.code,{children:"vmimport"})," IAM role in your AWS account. See ",(0,t.jsx)(o.a,{href:"https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-role",children:"VM Import/Export Requirements"})," in AWS documentation."]}),"\n",(0,t.jsx)(o.p,{children:"Now, you are ready to upload your first image to AWS. Using a text editor of your choice, create a configuration file with the following content:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-toml",children:'provider = "aws"\n\n[settings]\naccessKeyID = "AWS_ACCESS_KEY_ID"\nsecretAccessKey = "AWS_SECRET_ACCESS_KEY"\nbucket = "AWS_BUCKET"\nregion = "AWS_REGION"\nkey = "OBJECT_KEY"\n'})}),"\n",(0,t.jsx)(o.p,{children:"There are several considerations when filling values in this file:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.code,{children:"AWS_BUCKET"})," must be in the ",(0,t.jsx)(o.code,{children:"AWS_REGION"})]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.code,{children:"AWS_BUCKET"})," must be created in AWS prior to running the script"]}),"\n",(0,t.jsxs)(o.li,{children:["The ",(0,t.jsx)(o.code,{children:"vmimport"})," role must have read access to the ",(0,t.jsx)(o.code,{children:"AWS_BUCKET"})," please see this guide on how to do so:  ",(0,t.jsx)(o.a,{href:"https://www.msp360.com/resources/blog/how-to-configure-vmimport-role/",children:"How to create vmimport role"})]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.code,{children:"OBJECT_KEY"})," is the name of an intermediate S3 object. It must not exist before the upload, and it will be deleted when the process is done."]}),"\n"]}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:["If your authentication method requires you to also specify a session token, you can put it in the ",(0,t.jsx)(o.code,{children:"settings"})," section of the configuration file in a field named ",(0,t.jsx)(o.code,{children:"sessionToken"}),"."]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"Once everything is configured, you can trigger a compose as usual with additional image name and cloud provider profile:"}),"\n",(0,t.jsx)(o.h2,{id:"general-syntax",children:"General Syntax"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"$ sudo composer-cli compose start <image_name> ami IMAGE_KEY aws-config.toml\n"})}),"\n",(0,t.jsx)(o.p,{children:"where IMAGE_KEY will be the name of your new AMI, once it is uploaded to EC2."})]})}function u(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,o,i)=>{i.d(o,{R:()=>r,x:()=>a});var n=i(96540);const t={},s=n.createContext(t);function r(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);