"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[7925],{42547:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"developer-guide/projects/osbuild/contributing","title":"Contributing","description":"osbuild is written in Python and supports Python version >= 3.6.","source":"@site/docs/developer-guide/02-projects/osbuild/contributing.md","sourceDirName":"developer-guide/02-projects/osbuild","slug":"/developer-guide/projects/osbuild/contributing","permalink":"/docs/developer-guide/projects/osbuild/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild.github.io/tree/main/docs/developer-guide/02-projects/osbuild/contributing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"developer","previous":{"title":"OSBuild","permalink":"/docs/developer-guide/projects/osbuild/"},"next":{"title":"Deprecation","permalink":"/docs/developer-guide/projects/osbuild/deprecation"}}');var n=s(74848),o=s(28453);const r={},d="Contributing",a={},l=[{value:"Modules",id:"modules",level:2},{value:"Stages",id:"stages",level:3},{value:"Testing",id:"testing",level:4},{value:"Unit Tests",id:"unit-tests",level:5},{value:"Integration Tests",id:"integration-tests",level:5}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"osbuild"})," is written in Python and supports Python version ",(0,n.jsx)(t.code,{children:">= 3.6"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"modules",children:"Modules"}),"\n",(0,n.jsx)(t.h3,{id:"stages",children:"Stages"}),"\n",(0,n.jsxs)(t.p,{children:["When contributing a new stage to ",(0,n.jsx)(t.code,{children:"osbuild"})," it's important to keep in mind our deprecation policies. For new stages to be contributed we require unit tests and integration tests to be included in your pull request."]}),"\n",(0,n.jsx)(t.h4,{id:"testing",children:"Testing"}),"\n",(0,n.jsx)(t.h5,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,n.jsx)(t.p,{children:"Stage unit tests are tests that validate the stages correct handling of (in)valid schemas. The unit tests mock out everything where the stage might want to touch the system."}),"\n",(0,n.jsxs)(t.p,{children:["You can find the unit tests in the ",(0,n.jsx)(t.code,{children:"stages/test"})," ",(0,n.jsx)(t.a,{href:"https://github.com/osbuild/osbuild/tree/main/stages/test",children:"directory"})," from the repository root."]}),"\n",(0,n.jsx)(t.h5,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,n.jsx)(t.p,{children:"When testing a stage an integration test will build both a base image and that same image with the stage under test applied. Both images are then diffed against eachother."}),"\n",(0,n.jsx)(t.p,{children:"Stage integration tests will define the files that are allowed to change and their new contents and will fail if anything has changed between the two images that isn't whitelisted."}),"\n",(0,n.jsxs)(t.p,{children:["You can find the stage integration test manifests in the repository root under the ",(0,n.jsx)(t.code,{children:"test/data/stages"})," ",(0,n.jsx)(t.a,{href:"https://github.com/osbuild/osbuild/blob/main/test/data/stages/",children:"directory"}),". We generally write an ",(0,n.jsx)(t.code,{children:"a.mpp.yaml"})," which is the state before the stage, then copy it over into ",(0,n.jsx)(t.code,{children:"b.mpp.yaml"})," where the stage is applied. Differences are listed in ",(0,n.jsx)(t.code,{children:"diff.json"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:".mpp.yaml"})," files are processed using ",(0,n.jsx)(t.code,{children:"osbuild-mpp"})," into JSON manifests, you can use ",(0,n.jsx)(t.code,{children:"make test-data"})," to reprocess all ",(0,n.jsx)(t.code,{children:".mpp.yaml"})," files in the integration tests."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://github.com/osbuild/osbuild/blob/main/test/data/stages/README.md",children:"README.md"})," for the stage integration tests provides detail on how to set up your manifests."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>d});var i=s(96540);const n={},o=i.createContext(n);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);