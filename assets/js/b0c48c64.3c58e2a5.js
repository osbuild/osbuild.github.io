"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[9014],{21420:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>i,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.pull","title":"org.osbuild.ostree.pull","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.ostree.pull.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.pull","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.pull","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.pull.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.pull.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.ostree.preptree","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.preptree"},"next":{"title":"org.osbuild.ostree.remotes","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.remotes"}}');var r=o(74848),n=o(28453);const i={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.pull.meta.json"},l="org.osbuild.ostree.pull",d={},u=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"orgosbuildostreepull",children:"org.osbuild.ostree.pull"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Pull OSTree commits into an existing repo"})}),"\n",(0,r.jsxs)(s.p,{children:["This stage pulls one or more commits, provided via\nthe ",(0,r.jsx)(s.code,{children:"commits"})," input into an existing repository at\na location specified via ",(0,r.jsx)(s.code,{children:"repo"}),".\nIf the returned a reference via ",(0,r.jsx)(s.code,{children:"ref"})," it will use\nthat to pull the commits."]}),"\n",(0,r.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:"{}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "options": {\n    "additionalProperties": false,\n    "required": [\n      "repo"\n    ],\n    "properties": {\n      "repo": {\n        "description": "Location of the OSTree repo.",\n        "type": "string"\n      },\n      "remote": {\n        "description": "Add the \'remote\' to the ref spec",\n        "type": "string"\n      }\n    }\n  },\n  "inputs": {\n    "type": "object",\n    "additionalProperties": false,\n    "required": [\n      "commits"\n    ],\n    "properties": {\n      "commits": {\n        "type": "object",\n        "additionalProperties": true\n      }\n    }\n  }\n}\n'})})]})}function a(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>l});var t=o(96540);const r={},n=t.createContext(r);function i(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);