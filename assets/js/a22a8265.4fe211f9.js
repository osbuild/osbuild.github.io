"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[304],{43715:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>r,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"developer-guide/projects/images/docs/developer/README","title":"Hacking on osbuild/images","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/images/docs/developer/README.md","sourceDirName":"developer-guide/02-projects/images/docs/developer","slug":"/developer-guide/projects/images/docs/developer/","permalink":"/docs/developer-guide/projects/images/docs/developer/","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/images/blob/main/docs/developer/README.md","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/images/blob/main/docs/developer/README.md"},"sidebar":"developer","previous":{"title":"Images","permalink":"/docs/developer-guide/projects/images/"},"next":{"title":"cmds","permalink":"/docs/developer-guide/projects/images/docs/developer/cmds"}}');var o=i(74848),t=i(28453);const l={custom_edit_url:"https://github.com/osbuild/images/blob/main/docs/developer/README.md"},d="Hacking on osbuild/images",r={},c=[{value:"Local development environment",id:"local-development-environment",level:2},{value:"Commits and Pull Requests",id:"commits-and-pull-requests",level:2},{value:"Tests",id:"tests",level:2},{value:"Topics",id:"topics",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"hacking-on-osbuildimages",children:"Hacking on osbuild/images"})}),"\n",(0,o.jsx)(s.h2,{id:"local-development-environment",children:"Local development environment"}),"\n",(0,o.jsxs)(s.p,{children:["To build most binaries defined in ",(0,o.jsx)(s.code,{children:"cmd"})," and run tests you will need to install\nthe following dependencies:"]}),"\n",(0,o.jsx)(s.p,{children:"dnf -y install gpgme-devel btrfs-progs-devel krb5-devel"}),"\n",(0,o.jsx)(s.p,{children:"To generate manifests, you will need to install the following dependencies:"}),"\n",(0,o.jsx)(s.p,{children:"dnf -y install osbuild osbuild-depsolve-dnf osbuild-luks2 osbuild-lvm2 osbuild-ostree osbuild-selinux"}),"\n",(0,o.jsx)(s.h2,{id:"commits-and-pull-requests",children:"Commits and Pull Requests"}),"\n",(0,o.jsxs)(s.p,{children:["See ",(0,o.jsx)(s.a,{href:"https://osbuild.org/docs/developer-guide/general/workflow/",children:"the developer guide on osbuild.org"})," for general guidelines."]}),"\n",(0,o.jsx)(s.p,{children:"Guidelines specific to this repository:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Each commit should compile successfully. This is not checked or enforced. Commits should fail to compile only when it's absolutely necessary (e.g. for readability)."}),"\n",(0,o.jsx)(s.li,{children:"If possible, unit tests should pass on each commit as well, however readability and clean patches are preferred, so this is not a strict requirement."}),"\n",(0,o.jsxs)(s.li,{children:["The ",(0,o.jsx)(s.a,{href:"https://github.com/osbuild/images/tree/main/test/data/manifest-checksums.txt",children:"manifest checksum"})," file must be valid for every commit. Use the ",(0,o.jsx)(s.a,{href:"https://github.com/osbuild/images/tree/main/tools/gen-manifest-checksums.sh",children:"tools/gen-manifest-checksums.sh"})," script to generate the file if needed.","\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"The validity of the manifest checksum file is checked for every commit in a PR."}),"\n",(0,o.jsx)(s.li,{children:"Commits that fail to compile are skipped."}),"\n",(0,o.jsx)(s.li,{children:"Commits that change the file should include a short description in the commit message about how the manifests have changed, unless it is obvious from the code changes."}),"\n",(0,o.jsxs)(s.li,{children:["See the ",(0,o.jsx)(s.a,{href:"https://github.com/osbuild/images/tree/main/docs/developer/cmds.md#diffing-manifests",children:"Diffing manifests section of the Developer documentation"})," for more information."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"tests",children:"Tests"}),"\n",(0,o.jsxs)(s.p,{children:["Unit tests can be run using the standard ",(0,o.jsx)(s.code,{children:"go test"})," command:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"go test ./...\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Integration tests run on GitLab using dynamic pipelines. See ",(0,o.jsx)(s.a,{href:"/docs/developer-guide/projects/images/test/",children:"the test README"})," for full description."]}),"\n",(0,o.jsx)(s.h2,{id:"topics",children:"Topics"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/docs/developer-guide/projects/images/docs/developer/cmds",children:"Useful cmds"})," for development and testing."]}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/docs/developer-guide/projects/images/docs/developer/code-manifest-generation",children:"Manifest generation code"})}),"\n"]})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>d});var n=i(96540);const o={},t=n.createContext(o);function l(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);