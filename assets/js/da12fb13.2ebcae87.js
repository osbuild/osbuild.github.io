"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[27195],{7174:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.timezone","title":"org.osbuild.timezone","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.timezone.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.timezone","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.timezone","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.timezone.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.timezone.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.test","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.test"},"next":{"title":"org.osbuild.tmpfilesd","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.tmpfilesd"}}');var n=s(74848),i=s(28453);const r={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.timezone.meta.json"},d="org.osbuild.timezone",l={},c=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"orgosbuildtimezone",children:"org.osbuild.timezone"})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.strong,{children:"Set system timezone"})}),"\n",(0,n.jsxs)(o.p,{children:["Set the system's timezone to ",(0,n.jsx)(o.code,{children:"zone"}),', which should be a valid time zone\nidentifier from the tz database - like "America/New York" or "Europe/Berlin".\nRemoves ',(0,n.jsx)(o.code,{children:"/etc/localtime"}),", then runs the host's ",(0,n.jsx)(o.code,{children:"systemd-firstboot"})," binary with\nthe ",(0,n.jsx)(o.code,{children:"--timezone"})," option, which will re-create ",(0,n.jsx)(o.code,{children:"/etc/localtime"}),"."]}),"\n",(0,n.jsx)(o.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "required": [\n    "zone"\n  ],\n  "properties": {\n    "zone": {\n      "type": "string",\n      "description": "Timezone identifier (from tzdb/zoneinfo)"\n    }\n  }\n}\n'})}),"\n",(0,n.jsx)(o.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-json",children:"{}\n"})})]})}function a(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,o,s)=>{s.d(o,{R:()=>r,x:()=>d});var t=s(96540);const n={},i=t.createContext(n);function r(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);