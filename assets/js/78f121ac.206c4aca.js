"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[90842],{61916:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.init","title":"org.osbuild.ostree.init","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.ostree.init.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.init","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.init","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.init.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.init.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.ostree.init-fs","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.init-fs"},"next":{"title":"org.osbuild.ostree","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree"}}');var r=o(74848),n=o(28453);const i={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.init.meta.json"},d="org.osbuild.ostree.init",l={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"orgosbuildostreeinit",children:"org.osbuild.ostree.init"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Create an ostree repository"})}),"\n",(0,r.jsxs)(s.p,{children:["Uses ",(0,r.jsx)(s.code,{children:"ostree init"})," to create an ostree repository. The\nmode and location can be specified via the ",(0,r.jsx)(s.code,{children:"mode"})," and\n",(0,r.jsx)(s.code,{children:"path"})," option.\nSee the ostree-init(1) man page for more details."]}),"\n",(0,r.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "properties": {\n    "mode": {\n      "description": "The mode to initialize the repo in.",\n      "enum": [\n        "bare",\n        "bare-user",\n        "bare-user-only",\n        "archive"\n      ],\n      "default": "archive"\n    },\n    "path": {\n      "description": "Location where to create the repo at.",\n      "type": "string",\n      "default": "/repo"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:"{}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>d});var t=o(96540);const r={},n=t.createContext(r);function i(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);