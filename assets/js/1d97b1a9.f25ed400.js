"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[6833],{56783:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"developer-guide/projects/rpmrepo/index","title":"RPMrepo Snapshots","description":"RPM Repository Snapshot Management","source":"@site/docs/developer-guide/02-projects/rpmrepo/index.md","sourceDirName":"developer-guide/02-projects/rpmrepo","slug":"/developer-guide/projects/rpmrepo/","permalink":"/docs/developer-guide/projects/rpmrepo/","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/rpmrepo/blob/main/README.md","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/rpmrepo/blob/main/README.md"},"sidebar":"developer","previous":{"title":"osbuild-composer testing information","permalink":"/docs/developer-guide/projects/osbuild-composer/test/"}}');var i=n(74848),r=n(28453);const o={custom_edit_url:"https://github.com/osbuild/rpmrepo/blob/main/README.md"},a="RPMrepo Snapshots",l={},h=[{value:"Project",id:"project",level:3},{value:"Requirements",id:"requirements",level:3},{value:"About",id:"about",level:3},{value:"List Available Snapshots",id:"list-available-snapshots",level:3},{value:"Repository:",id:"repository",level:3},{value:"License:",id:"license",level:3}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"rpmrepo-snapshots",children:"RPMrepo Snapshots"})}),"\n",(0,i.jsx)(s.p,{children:"RPM Repository Snapshot Management"}),"\n",(0,i.jsx)(s.p,{children:"The RPMrepo project creates persistent and immutable snapshots of RPM\nrepositories. It provides tools and infrastructure to create such snapshots, as\nwell as host and serve them."}),"\n",(0,i.jsx)(s.h3,{id:"project",children:"Project"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Website"}),": ",(0,i.jsx)(s.a,{href:"https://www.osbuild.org",children:"https://www.osbuild.org"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Bug Tracker"}),": ",(0,i.jsx)(s.a,{href:"https://github.com/osbuild/rpmrepo/issues",children:"https://github.com/osbuild/rpmrepo/issues"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(s.p,{children:"The requirements for this project are:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"python >= 3.8"})}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"about",children:"About"}),"\n",(0,i.jsx)(s.p,{children:"RPMrepo is comprised of a set of different utilities and infrastructure. The\nmain goal is to regularly create immutable snapshots of a set of public and\nRedHat-private RPM repositories and provide them for a fixed amount of time\non our own infrastructure."}),"\n",(0,i.jsxs)(s.p,{children:["Our infrastructure is maintained via the OSBuild Terraform configuration. See\nthe\n",(0,i.jsx)(s.a,{href:"https://github.com/osbuild/image-builder-terraform",children:"image-builder-terraform"}),"\nrepository, in particular the\n",(0,i.jsx)(s.a,{href:"https://github.com/osbuild/image-builder-terraform/blob/main/rpmrepo.tf",children:"rpmrepo.tf"}),"\nconfiguration."]}),"\n",(0,i.jsxs)(s.p,{children:["For user documentation on RPMrepo, see:\n",(0,i.jsx)(s.a,{href:"https://osbuild.org/docs/developer-guide/projects/rpmrepo/",children:"https://osbuild.org/docs/developer-guide/projects/rpmrepo/"})]}),"\n",(0,i.jsx)(s.p,{children:"The backend implementation of RPMrepo involves the following steps:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Target Repository Configuration"}),"\n",(0,i.jsxs)(s.p,{children:["When running snapshot operations, we need to know the list of target RPM\nrepositories to snapshot, what to call the snapshots, and where to store\nthe data. This information is currently stored as JSON files in this\nrepository (see the ",(0,i.jsx)(s.code,{children:"./repo/"})," subdirectory)."]}),"\n",(0,i.jsx)(s.p,{children:"For each target repository, we store a JSON dictionary with the following\ninformation:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:['"base-url": The RPM repository base-url to create the snapshot of. An\nRPM repository base-url requires the root-level metadata\nfile to be accessible as ',(0,i.jsx)(s.code,{children:"repodata/repomd.xml"}),". See the\nDNF / RPM documentation for more information, if desired."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:['"platform-id": The DNF Platform ID to use. This allows to group\nmultiple snapshots together and share the backend\nstorage. We use this to deduplicate RPMs in our backend.\nThis ID can be freely chosen, but all snapshots that\nshare an ID can only be deleted together. We usually\npick the actual DNF Platform ID (see the DNF\n',(0,i.jsx)(s.code,{children:"module_platform_id"})," for details) here, but this is\nnot required."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:'"singleton": We usually create snapshots regularly. In case a target\nrepository is already immutable by design, this key can\nbe set to make sure only a single snapshot of this\nrepository is ever taken. Simply set this key to the\nsnapshot suffix to use for the singleton snapshot, and\nall snapshot operations will use this suffix (and thus\nskipping the operation if it already exists).'}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:'"snapshot-id": The name of the snapshot to store it as. Usually this\nis the same as the name of this file without extension.\nThis name can be freely chosen. We usually name\nsnapshots as:'}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"<platform-id>-<arch>-<repo>[-<repo-version>].\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Note that the actual snapshots will get a suffix like\n",(0,i.jsx)(s.code,{children:"-<date>"})," appended automatically. This field must not\ninclude this suffix in the snapshot ID."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:'"storage": The ID of the storage location to use. We have different\nstorage locations for different access rights. For now, this\nis just a string that specifies the directory in our backend\nstorage. See the backend information for possible values.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Snapshot Creation"}),"\n",(0,i.jsxs)(s.p,{children:["To create snapshots, we use the ",(0,i.jsx)(s.code,{children:"reposync"})," dnf module. See ",(0,i.jsx)(s.code,{children:"dnf reposync"}),"\nfor more information. This tool just downloads an entire RPM repository\nto local storage. We then index this data for our backend storage and\nupload it."]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"./src/ctl/"})," directory implements the command-line control client\nthat we use for this. It is a python module that just wraps ",(0,i.jsx)(s.code,{children:"dnf reposync"}),"\nto download a repository, provides indexing helpers, and then wraps the\nAWS ",(0,i.jsx)(s.code,{children:"boto3"})," API to upload everything to our storage."]}),"\n",(0,i.jsx)(s.p,{children:"Note that a single snapshot might store up to 100GiB of data intermittently\nand can take up to 8h. Therefore, none of the default script execution\nengines can be used, since they either have limited disk-space or limited\nexecution time."}),"\n",(0,i.jsxs)(s.p,{children:["We provide a container (see the ",(0,i.jsx)(s.code,{children:"osbuild/containers"})," repository) called\n",(0,i.jsx)(s.code,{children:"rpmrepo-snapshot"})," which reads the configuration in ",(0,i.jsx)(s.code,{children:"./repo/"})," and uses the\npython module in ",(0,i.jsx)(s.code,{children:"./src/ctl/"})," to create a snapshot. The container supports\nbatched execution, thus can be used to create many snapshots in parallel."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Storage"}),"\n",(0,i.jsxs)(s.p,{children:["We currently store all snapshots in a dedicated AWS S3 bucket called\n",(0,i.jsx)(s.code,{children:"rpmrepo-storage"}),". Since we store a lot of data, we employ a data\ndeduplication strategy. All actual data files are stored with their sha256\nchecksum as name in ",(0,i.jsx)(s.code,{children:"data/<storage>/<platform-id>/sha256-<checksum>"}),". This\nmeans matching files will be deduplicated if they are stored in the same\nstorage-directory with the same platform-id."]}),"\n",(0,i.jsxs)(s.p,{children:["Since we dropped file-names and paths, we cannot serve an RPM repository\nfrom this checksum-based storage. Therefore, we create shim wrapping layers\nthat refer to this storage. In ",(0,i.jsx)(s.code,{children:"data/ref/<platform-id>/<snapshot-id>/..."}),"\nwe store the entire RPM repository, but with empty files. We then attach\nAWS S3 metadata to all these empty files and fill in the checksum of their\ncontent. This way, all objects underneath the ",(0,i.jsx)(s.code,{children:"data/ref/..."})," directory is\nempty, and thus free of charge."]}),"\n",(0,i.jsxs)(s.p,{children:["Our frontend thus only needs to redirect requests from ",(0,i.jsx)(s.code,{children:"data/ref/"})," to\nthe correct underlying file, by reading the checksum metadata."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Gateway"}),"\n",(0,i.jsxs)(s.p,{children:["The frontend to the RPM repository snapshots is a simple HTTP REST API. It\nuses AWS API Gateway to create a simple catch-all REST API that forwards\nall HTTP requests to an AWS Lambda script. This script is sourced from\n",(0,i.jsx)(s.code,{children:"./src/gateway/"})," in this repository."]}),"\n",(0,i.jsxs)(s.p,{children:["This scripts provides a multitude of legacy interfaces for all kinds of\noperations. See its implementation for details. Its main job is to read\nrequests to a snapshot, find the file in ",(0,i.jsx)(s.code,{children:"data/ref/..."}),", read the checksum\nfrom the metadata of this empty file, and then return a 301 HTTP redirect\nto the right file in ",(0,i.jsx)(s.code,{children:"data/<storage>/<platform-id>/sha256-<checksum>"}),". It\nis then the client's job to follow this redirect and directly download the\nfile."]}),"\n",(0,i.jsx)(s.p,{children:"Note that we simply redirect clients to the public HTTP interface to AWS\nS3. The gateway never transmits any data of the repositories. This keeps\nour charges low and makes sure large files are always directly transferred\nbetween AWS S3 and the client."}),"\n",(0,i.jsxs)(s.p,{children:["Several paths in the ",(0,i.jsx)(s.code,{children:"rpmrepo-storage"})," S3 bucket are publicly accessible.\nIn particular, ",(0,i.jsx)(s.code,{children:"data/public/"}),", ",(0,i.jsx)(s.code,{children:"data/ref/"}),", and ",(0,i.jsx)(s.code,{children:"data/thread/"}),". The\n",(0,i.jsx)(s.code,{children:"data/rhvpn/"})," path is ",(0,i.jsx)(s.em,{children:"NOT"})," publicly accessible. Instead, we have an AWS\nVPC Endpoint that opens up this path to all clients from within the RH\nVPN. Hence, data stored in this directory is only accessible from within\nRH.\nNote that ",(0,i.jsx)(s.code,{children:"data/ref/"})," is public, and as such all snapshots can be listed\nand enumerated publicly. Only the file content is possibly protected from\npublic access. This is intentional, but can be changed in the future if\nit poses a problem."]}),"\n",(0,i.jsx)(s.p,{children:"Apart from redirects, the gateway also provides utility functions to\nenumerate all snapshots, or redirect to old legacy storage locations of\nolder RPMrepo revisions."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Snapshot Routine"}),"\n",(0,i.jsxs)(s.p,{children:["As a single snapshot operation requires a lot of storage and time, we use\ncustom infrastructure to run this. This used to be Beaker, but for better\nreliability, we now schedule the snapshot jobs on AWS Batch. The\npreviously mentioned ",(0,i.jsx)(s.code,{children:"rpmrepo-snapshot"})," container is scheduled on AWS Batch\nand then will create the requested snapshots."]}),"\n",(0,i.jsxs)(s.p,{children:["The snapshot routine can be scheduled as a single job, or as an array job.\nIf scheduled as single job, you must specify the name of the target\nconfiguration in ",(0,i.jsx)(s.code,{children:"./repo/"})," to run. If scheduled as an array job, you should\nsize the array as big as the number of files in ",(0,i.jsx)(s.code,{children:"./repo/"})," (bigger is fine,\nthose excess jobs will be no-ops; smaller is less fine, as it will miss\nsnapshots). The array jobs will then each pick one file in ",(0,i.jsx)(s.code,{children:"./repo/"})," based\non their ARRAY-JOB-ID."]}),"\n",(0,i.jsxs)(s.p,{children:["Furthermore, the snapshot routine requires you to specify the branch and\ncommit of the ",(0,i.jsx)(s.code,{children:"rpmrepo"})," repository to use. You can use ",(0,i.jsx)(s.code,{children:"main"}),"+",(0,i.jsx)(s.code,{children:"HEAD"}),", but\nthis will be subject to concurrent changes in the upstream repository. You\nare strongly advised to use ",(0,i.jsx)(s.code,{children:"main"}),"+",(0,i.jsx)(s.code,{children:"<commit-sha>"})," instead."]}),"\n",(0,i.jsxs)(s.p,{children:["Lastly, you can specify the suffix to be used for the snapshots. If you\nspecify ",(0,i.jsx)(s.code,{children:"auto"}),", it will use the current date and time (except for singleton\nsnapshots; see above). You should specify this suffix manually to make\nsure all snapshots share a suffix. Otherwise, updating users will be a\nhassle."]}),"\n",(0,i.jsx)(s.p,{children:"The AWS Batch interface will allow you to track all the snapshot jobs, see\nwhich failed, and allow you to reschedule individual jobs, if desired."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Updating snapshot configurations"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"./repo/"})," directory contains all the configuration files for the\nsnapshots. Each file is a JSON file that specifies the configuration for\none snapshot."]}),"\n",(0,i.jsxs)(s.p,{children:["Individual snapshot configurations can be generated using the helper script\n",(0,i.jsx)(s.code,{children:"./gen-repos.py"}),". Multiple snapshot configurations can be generated by\ndefining them in ",(0,i.jsx)(s.code,{children:"./repo-definitions.yaml"})," and then running\n",(0,i.jsx)(s.code,{children:"./gen-all-repos.py"}),", which internally calls ",(0,i.jsx)(s.code,{children:"./gen-repos.py"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Updating the snapshot configurations usually consists of deleting unused\nconfigurations, and adding new ones. The most convenient way to do this is\nto update the ",(0,i.jsx)(s.code,{children:"./repo-definitions.yaml"})," file, and then run the\n",(0,i.jsx)(s.code,{children:"snapshot-configs"})," Makefile target. This will automatically delete all\nconfigurations that are no longer present in the definition file, and\ngenerate new ones."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"list-available-snapshots",children:"List Available Snapshots"}),"\n",(0,i.jsx)(s.p,{children:"If you just need a list of the available snapshots you can query the API like\nthis:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"curl https://rpmrepo.osbuild.org/v2/enumerate | jq .\n"})}),"\n",(0,i.jsx)(s.p,{children:"Which will return a JSON list of the snapshots names."}),"\n",(0,i.jsx)(s.h3,{id:"repository",children:"Repository:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"web"}),":   ",(0,i.jsx)(s.a,{href:"https://github.com/osbuild/rpmrepo",children:"https://github.com/osbuild/rpmrepo"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"https"}),": ",(0,i.jsx)(s.code,{children:"https://github.com/osbuild/rpmrepo.git"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ssh"}),":   ",(0,i.jsx)(s.code,{children:"git@github.com:osbuild/rpmrepo.git"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"license",children:"License:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Apache-2.0"})}),"\n",(0,i.jsx)(s.li,{children:"See LICENSE file for details."}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(96540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);