"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[15334],{74569:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.dracut","title":"org.osbuild.dracut","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.dracut.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.dracut","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.dracut","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.dracut.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.dracut.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.dracut.conf","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.dracut.conf"},"next":{"title":"org.osbuild.erofs","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.erofs"}}');var r=t(74848),i=t(28453);const o={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.dracut.meta.json"},d="org.osbuild.dracut",a={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"orgosbuilddracut",children:"org.osbuild.dracut"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Create (re-create) the initial RAM file-system"})}),"\n",(0,r.jsxs)(n.p,{children:["Uses ",(0,r.jsx)(n.code,{children:"dracut"})," to re-create the initial RAM filesystem, see man dracut(8).\nThe kernels for which the initramfs should be generated need to be provided\nvia ",(0,r.jsx)(n.code,{children:"kernel"}),' matching their name on the disk, like  "5.6.6-300.fc32.x86_64".\nSupports most options also found in ',(0,r.jsx)(n.code,{children:"dracut"}),"(8). See the respective man\npage and schema for this stage.\nNB: needs chroot for now as well as ",(0,r.jsx)(n.code,{children:"strip"})," for stripping the initrfams."]}),"\n",(0,r.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "required": [\n    "kernel"\n  ],\n  "properties": {\n    "kernel": {\n      "description": "List of target kernel versions",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A kernel version"\n      }\n    },\n    "compress": {\n      "description": "Compress the initramfs, passed via `--compress`",\n      "type": "string"\n    },\n    "modules": {\n      "description": "Exact list of dracut modules to use.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A dracut module, e.g. base, nfs, network ..."\n      }\n    },\n    "add_modules": {\n      "description": "Additional dracut modules to include.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A dracut module, e.g. base, nfs, network ..."\n      }\n    },\n    "omit_modules": {\n      "description": "Dracut modules to not include.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A dracut module, e.g. base, nfs, network ..."\n      }\n    },\n    "drivers": {\n      "description": "Kernel modules to exclusively include.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A kernel module without the .ko extension"\n      }\n    },\n    "add_drivers": {\n      "description": "Add a specific kernel modules.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A kernel module without the .ko extension"\n      }\n    },\n    "omit_drivers": {\n      "description": "Omit specific kernel modules.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A kernel module without the .ko extension."\n      }\n    },\n    "force_drivers": {\n      "description": "Add driver and ensure that they are tried to be loaded.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A kernel module without the .ko extension"\n      }\n    },\n    "filesystems": {\n      "description": "Kernel filesystem modules to exclusively include.",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A kernel module without the .ko extension"\n      }\n    },\n    "include": {\n      "description": "Add custom files to the initramfs.",\n      "type": "array",\n      "items": {\n        "type": "object",\n        "description": "What (keys) to include where (values)"\n      }\n    },\n    "install": {\n      "description": "Install the specified files.",\n      "type": "array",\n      "items": {\n        "type": "string"\n      }\n    },\n    "early_microcode": {\n      "description": "Combine early microcode with the initramfs.",\n      "type": "boolean",\n      "default": false\n    },\n    "reproducible": {\n      "description": "Create reproducible images.",\n      "type": "boolean"\n    },\n    "initoverlayfs": {\n      "description": "Use initoverlayfs rather than initramfs, requires initoverlayfs rpm to be installed",\n      "type": "boolean",\n      "default": false\n    },\n    "extra": {\n      "description": "Extra arguments to directly pass to dracut",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "Individual extra arguments"\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);