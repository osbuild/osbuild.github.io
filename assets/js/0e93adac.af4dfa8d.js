"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[69289],{71361:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.tar","title":"org.osbuild.tar","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.tar.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.tar","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.tar","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.tar.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.tar.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.systemd.unit","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd.unit"},"next":{"title":"org.osbuild.test","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.test"}}');var o=t(74848),r=t(28453);const i={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.tar.meta.json"},d="org.osbuild.tar",a={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"orgosbuildtar",children:"org.osbuild.tar"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Assembles the tree into a tar archive named ",(0,o.jsx)(n.code,{children:"filename"}),"."]})}),"\n",(0,o.jsxs)(n.p,{children:["Uses the buildhost's ",(0,o.jsx)(n.code,{children:"tar"})," command, like: ",(0,o.jsx)(n.code,{children:"tar -cf $FILENAME -C $TREE"}),"\nThe compression of the tar archive if determined by the suffix, i.e.\nthe ",(0,o.jsx)(n.code,{children:"--auto-compress"})," option is used. See tar(1) for details.\nBy default POSIX ACLs, SELinux contexts and extended attributes are included,\nin order to preserve the tree as closely as possible. It is possible to opt\nout of any of those by supplying the corresponding option.\nBuildhost commands used: ",(0,o.jsx)(n.code,{children:"tar"})," and any needed compression program."]}),"\n",(0,o.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "options": {\n    "additionalProperties": false,\n    "anyOf": [\n      {\n        "required": [\n          "root-node"\n        ],\n        "not": {\n          "required": [\n            "paths"\n          ]\n        }\n      },\n      {\n        "required": [\n          "paths"\n        ],\n        "not": {\n          "required": [\n            "root-node"\n          ]\n        }\n      },\n      {\n        "not": {\n          "required": [\n            "paths",\n            "root-node"\n          ]\n        }\n      }\n    ],\n    "required": [\n      "filename"\n    ],\n    "properties": {\n      "filename": {\n        "description": "Filename for tar archive",\n        "type": "string"\n      },\n      "format": {\n        "description": "Archive format to use",\n        "type": "string",\n        "enum": [\n          "gnu",\n          "oldgnu",\n          "posix",\n          "ustar",\n          "v7"\n        ],\n        "default": "gnu"\n      },\n      "compression": {\n        "description": "Compression to use",\n        "type": "string",\n        "enum": [\n          "auto",\n          "xz",\n          "gzip",\n          "zstd"\n        ],\n        "default": "auto"\n      },\n      "acls": {\n        "description": "Enable support for POSIX ACLs",\n        "type": "boolean",\n        "default": true\n      },\n      "selinux": {\n        "description": "Enable support for SELinux contexts",\n        "type": "boolean",\n        "default": true\n      },\n      "xattrs": {\n        "description": "Enable support for extended attributes",\n        "type": "boolean",\n        "default": true\n      },\n      "root-node": {\n        "description": "How to handle the root node: include or omit, mutually exclusive with paths",\n        "enum": [\n          "include",\n          "omit"\n        ]\n      },\n      "paths": {\n        "type": "array",\n        "items": {\n          "type": "string",\n          "description": "If specified, the archive will only contain the specified paths, in the specified order"\n        }\n      },\n      "sparse": {\n        "description": "Make archive files sparse",\n        "type": "boolean",\n        "default": false\n      },\n      "transform": {\n        "type": "string",\n        "description": "Used to transform filenames and directly passed to --transform"\n      }\n    }\n  },\n  "inputs": {\n    "type": "object",\n    "additionalProperties": false,\n    "required": [\n      "tree"\n    ],\n    "properties": {\n      "tree": {\n        "type": "object",\n        "additionalProperties": true\n      }\n    }\n  }\n}\n'})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var s=t(96540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);