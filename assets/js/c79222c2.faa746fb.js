"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[5620],{9166:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.chrony","title":"org.osbuild.chrony","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.chrony.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.chrony","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.chrony","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.chrony.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.chrony.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.chown","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.chown"},"next":{"title":"org.osbuild.clevis.luks-bind","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.clevis.luks-bind"}}');var s=t(74848),r=t(28453);const o={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.chrony.meta.json"},d="org.osbuild.chrony",a={},c=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"orgosbuildchrony",children:"org.osbuild.chrony"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configure chrony to set system time from the network."})}),"\n",(0,s.jsxs)(n.p,{children:["Configures ",(0,s.jsx)(n.code,{children:"chrony"})," by modifying ",(0,s.jsx)(n.code,{children:"/etc/chrony.conf"}),'.\nBefore new values are added to the chrony configuration, all lines starting with\n"server", "pool" or "peer" are removed.\nThe \'timeservers\' option provides a very high-level way of configuring chronyd\nwith specific timeservers. Its value is a list of strings representing the\nhostname or IP address of the timeserver. For each list item, the following\nline will be added to the configuration:\n',(0,s.jsx)(n.code,{children:"server \\<HOSTNAME/IP\\> iburst"}),"\nThe 'servers' option provides a direct mapping to the ",(0,s.jsx)(n.code,{children:"server"})," directive from\nchrony configuration. Its value is a list of dictionaries representing each\ntimeserver which should be added to the configuration. For each list item,\na ",(0,s.jsx)(n.code,{children:"server"})," directive will be added the configuration. Currently supported\nsubset of options which can be specified for each timeserver item:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"'hostname' (REQUIRED)"}),"\n",(0,s.jsx)(n.li,{children:"'minpoll'"}),"\n",(0,s.jsx)(n.li,{children:"'maxpoll'"}),"\n",(0,s.jsx)(n.li,{children:"'iburst' (defaults to true)"}),"\n",(0,s.jsx)(n.li,{children:"'prefer' (defaults to false)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"leapsectz"})," option configures chrony behavior related to automatic checking\nof the next occurrence of the leap second, using the provided timezone. Its\nvalue is a string representing a timezone from the system tz database (e.g.\n'right/UTC'). If an empty string is provided, then all occurrences of\n",(0,s.jsx)(n.code,{children:"leapsectz"})," directive are removed from the configuration."]}),"\n",(0,s.jsx)(n.p,{children:"The refclock directive can be used to specify one or more hardware\nreference clocks to be used as a time source."}),"\n",(0,s.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "minProperties": 1,\n  "properties": {\n    "timeservers": {\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "description": "Array of NTP server addresses."\n    },\n    "servers": {\n      "type": "array",\n      "items": {\n        "additionalProperties": false,\n        "type": "object",\n        "required": [\n          "hostname"\n        ],\n        "properties": {\n          "hostname": {\n            "type": "string",\n            "description": "Hostname or IP address of a NTP server."\n          },\n          "minpoll": {\n            "type": "integer",\n            "description": "Specifies the minimum interval between requests sent to the server as a power of 2 in seconds.",\n            "minimum": -6,\n            "maximum": 24\n          },\n          "maxpoll": {\n            "type": "integer",\n            "description": "Specifies the maximum interval between requests sent to the server as a power of 2 in seconds.",\n            "minimum": -6,\n            "maximum": 24\n          },\n          "iburst": {\n            "type": "boolean",\n            "default": true,\n            "description": "Configures chronyd behavior related to burst requests on startup."\n          },\n          "prefer": {\n            "type": "boolean",\n            "default": false,\n            "description": "Prefer this source over sources without the prefer option."\n          }\n        }\n      }\n    },\n    "leapsectz": {\n      "type": "string",\n      "description": "Timezone used by chronyd to determine when will the next leap second occur. Empty value will remove the option."\n    },\n    "refclocks": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "additionalProperties": false,\n        "required": [\n          "driver"\n        ],\n        "properties": {\n          "driver": {\n            "oneOf": [\n              {\n                "$ref": "#/definitions/PPS"\n              },\n              {\n                "$ref": "#/definitions/SHM"\n              },\n              {\n                "$ref": "#/definitions/SOCK"\n              },\n              {\n                "$ref": "#/definitions/PHC"\n              }\n            ]\n          },\n          "poll": {\n            "type": "integer",\n            "description": "Specifies the interval between processing times of timestamps as a power of 2 in seconds."\n          },\n          "dpoll": {\n            "type": "integer",\n            "description": "Some drivers do not listen for external events and try to produce samples in their own polling interval. This is defined as a power of 2 and can be negative to specify a sub-second interval. The default is 0 (1 second)."\n          },\n          "offset": {\n            "type": "number",\n            "description": "This option can be used to compensate for a constant error. The default is 0.0."\n          }\n        }\n      }\n    }\n  },\n  "definitions": {\n    "PPS": {\n      "description": "Driver for the kernel PPS (pulse per second) API.",\n      "type": "object",\n      "required": [\n        "name",\n        "device"\n      ],\n      "additionalProperties": false,\n      "properties": {\n        "name": {\n          "type": "string",\n          "enum": [\n            "PPS"\n          ]\n        },\n        "device": {\n          "type": "string",\n          "description": "Path to the PPS device (typically /dev/pps?).",\n          "pattern": "^\\\\/(?!\\\\.\\\\.)((?!\\\\/\\\\.\\\\.\\\\/).)+$"\n        },\n        "clear": {\n          "type": "boolean",\n          "description": "By default, the PPS refclock uses assert events (rising edge) for synchronisation. With this option, it will use clear events (falling edge) instead."\n        }\n      }\n    },\n    "SHM": {\n      "description": "NTP shared memory driver.",\n      "type": "object",\n      "required": [\n        "name",\n        "segment"\n      ],\n      "additionalProperties": false,\n      "properties": {\n        "name": {\n          "type": "string",\n          "enum": [\n            "SHM"\n          ]\n        },\n        "segment": {\n          "type": "integer",\n          "description": "The number of the shared memory segment."\n        },\n        "perm": {\n          "type": "string",\n          "pattern": "^[0-7]{4}$",\n          "description": "This option specifies the permissions of the shared memory segment created by chronyd. They are specified as a numeric mode. The default value is 0600 (read-write access for owner only)."\n        }\n      }\n    },\n    "SOCK": {\n      "description": "Unix domain socket driver.",\n      "type": "object",\n      "required": [\n        "name",\n        "path"\n      ],\n      "additionalProperties": false,\n      "properties": {\n        "name": {\n          "type": "string",\n          "enum": [\n            "SOCK"\n          ]\n        },\n        "path": {\n          "type": "string",\n          "pattern": "^\\\\/(?!\\\\.\\\\.)((?!\\\\/\\\\.\\\\.\\\\/).)+$",\n          "description": "The path to the socket."\n        }\n      }\n    },\n    "PHC": {\n      "description": "Unix domain socket driver.",\n      "type": "object",\n      "required": [\n        "name",\n        "path"\n      ],\n      "additionalProperties": false,\n      "properties": {\n        "name": {\n          "type": "string",\n          "enum": [\n            "PHC"\n          ]\n        },\n        "path": {\n          "type": "string",\n          "pattern": "^\\\\/(?!\\\\.\\\\.)((?!\\\\/\\\\.\\\\.\\\\/).)+$",\n          "description": "The path to the device of the PTP clock to be used as a time source."\n        },\n        "nocrossts": {\n          "type": "boolean",\n          "description": "Disable use of precise cross timestamping."\n        },\n        "extpps": {\n          "type": "boolean",\n          "description": "Enable a PPS mode in which the PTP clock is timestamping pulses of an external PPS signal connected to the clock."\n        },\n        "pin": {\n          "type": "integer",\n          "description": "The index of the pin for the PPS mode. The default value is 0."\n        },\n        "channel": {\n          "type": "integer",\n          "description": "The index of the channel for the PPS mode. The default value is 0."\n        },\n        "clear": {\n          "type": "boolean",\n          "description": "This option enables timestamping of clear events (falling edge) instead of assert events (rising edge) in the PPS mode. This may not work with some clocks."\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);