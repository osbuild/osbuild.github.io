"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[7339],{26441:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>d,default:()=>a,frontMatter:()=>n,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.debug-shell","title":"org.osbuild.debug-shell","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.debug-shell.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.debug-shell","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.debug-shell","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.debug-shell.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.debug-shell.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.crypttab","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.crypttab"},"next":{"title":"org.osbuild.discinfo","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.discinfo"}}');var l=t(74848),r=t(28453);const n={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.debug-shell.meta.json"},d="org.osbuild.debug-shell",i={},u=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"orgosbuilddebug-shell",children:"org.osbuild.debug-shell"})}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.strong,{children:"Set up an early root shell on a certain tty"})}),"\n",(0,l.jsxs)(s.p,{children:["Creates a systemd unit file at /etc/systemd/system/osbuild-debug-shell.service\nwhich starts an early-boot root shell on the given ",(0,l.jsx)(s.code,{children:"tty"}),".\nAlso symlinks the service file into /etc/systemd/system/sysinit.target.wants/."]}),"\n",(0,l.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "required": [\n    "tty"\n  ],\n  "properties": {\n    "tty": {\n      "type": "string",\n      "description": "Absolute path of the tty device to start a root shell on."\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:"{}\n"})})]})}function a(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>d});var o=t(96540);const l={},r=o.createContext(l);function n(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),o.createElement(r.Provider,{value:s},e.children)}}}]);