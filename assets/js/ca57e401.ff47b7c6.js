"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[2185],{18508:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.ovf","title":"org.osbuild.ovf","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.ovf.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.ovf","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ovf","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ovf.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ovf.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.ostree.sign","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.sign"},"next":{"title":"org.osbuild.pacman-keyring","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.pacman-keyring"}}');var t=o(74848),r=o(28453);const i={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ovf.meta.json"},d="org.osbuild.ovf",a={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"orgosbuildovf",children:"org.osbuild.ovf"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Create OVF descriptor and manifest"})}),"\n",(0,t.jsxs)(s.p,{children:["Generates a OVF descriptor (xml) for a vmdk intended for vSphere.\nThe OVF descriptor has minimal virtual hardware and no network.\nHardware and network can be configured during or after importing\ninto vSphere.\nBuildhost commands used: ",(0,t.jsx)(s.code,{children:"qemu-img"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:"{}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "options": {\n    "additionalProperties": false,\n    "required": [\n      "vmdk"\n    ],\n    "properties": {\n      "vmdk": {\n        "description": "The vmdk image filename present in the root of the tree",\n        "type": "string",\n        "pattern": "[a-zA-Z0-9+_.-]+.vmdk"\n      },\n      "vmware": {\n        "description": "Settings for VMWare specific parts of the OVF file.",\n        "type": "object",\n        "additionalProperties": false,\n        "properties": {\n          "os_type": {\n            "type": "string",\n            "default": "other26xLinux64Guest"\n          }\n        }\n      },\n      "virtualbox": {\n        "description": "Settings for VirtualBox specific parts of the OVF file.",\n        "type": "object",\n        "additionalProperties": false,\n        "properties": {\n          "os_type": {\n            "type": "string",\n            "default": "OtherLinux_64"\n          },\n          "mac_address": {\n            "type": "string",\n            "pattern": "^[a-fA-F0-9]{12}$"\n          }\n        }\n      }\n    }\n  }\n}\n'})})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>d});var n=o(96540);const t={},r=n.createContext(t);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);