"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[8066],{4912:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.mkfs.ext4","title":"org.osbuild.mkfs.ext4","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.mkfs.ext4.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkfs.ext4","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkfs.ext4","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.mkfs.ext4.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.mkfs.ext4.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.mkfs.btrfs","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkfs.btrfs"},"next":{"title":"org.osbuild.mkfs.fat","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkfs.fat"}}');var o=t(4848),i=t(8453);const r={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.mkfs.ext4.meta.json"},d="org.osbuild.mkfs.ext4",l={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"orgosbuildmkfsext4",children:"org.osbuild.mkfs.ext4"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Construct an ext4 file-system via mkfs.ext4(8)"})}),"\n",(0,o.jsxs)(s.p,{children:["Construct a ext4 file-system with the given options at the device\nspecified via ",(0,o.jsx)(s.code,{children:"device"}),".\nBuildhost commands used: ",(0,o.jsx)(s.code,{children:"mke2fs"}),"."]}),"\n",(0,o.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-json",children:"{}\n"})}),"\n",(0,o.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-json",children:'{\n  "devices": {\n    "type": "object",\n    "additionalProperties": true,\n    "required": [\n      "device"\n    ],\n    "properties": {\n      "device": {\n        "type": "object",\n        "additionalProperties": true\n      }\n    }\n  },\n  "options": {\n    "additionalProperties": false,\n    "required": [\n      "uuid"\n    ],\n    "properties": {\n      "uuid": {\n        "description": "Volume identifier",\n        "type": "string"\n      },\n      "label": {\n        "description": "Label for the file system",\n        "type": "string",\n        "maxLength": 16\n      },\n      "lazy_init": {\n        "description": "Enable or disable lazy_itable_init and lazy_journal_init support",\n        "type": "boolean"\n      },\n      "metadata_csum_seed": {\n        "description": "Enable metadata_csum_seed support",\n        "type": "boolean"\n      },\n      "orphan_file": {\n        "description": "Enable orphan_file support",\n        "type": "boolean"\n      },\n      "verity": {\n        "description": "Enable fs-verity support",\n        "type": "boolean"\n      }\n    }\n  }\n}\n'})})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>d});var n=t(6540);const o={},i=n.createContext(o);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);