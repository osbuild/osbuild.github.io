"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[86357],{20261:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.firewall","title":"org.osbuild.firewall","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.firewall.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.firewall","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.firewall","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.firewall.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.firewall.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.fdo","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.fdo"},"next":{"title":"org.osbuild.first-boot","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.first-boot"}}');var r=n(74848),t=n(28453);const i={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.firewall.meta.json"},l="org.osbuild.firewall",d={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"orgosbuildfirewall",children:"org.osbuild.firewall"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Configure firewall"})}),"\n",(0,r.jsxs)(s.p,{children:["Configure firewalld using the ",(0,r.jsx)(s.code,{children:"firewall-offline-cmd"})," from inside the target.\nThis stage adds each of the given ",(0,r.jsx)(s.code,{children:"ports"})," and ",(0,r.jsx)(s.code,{children:"enabled_services"})," to the default\nfirewall zone using the ",(0,r.jsx)(s.code,{children:"--port"})," and ",(0,r.jsx)(s.code,{children:"--service"})," options, then removes the\nservices listed in ",(0,r.jsx)(s.code,{children:"disabled_services"})," with ",(0,r.jsx)(s.code,{children:"--remove-service"}),'.\nPorts should be specified as "portid',":protocol",'" or "portid-portid',":protocol",'",\nwhere "portid" is a number (or a port name from ',(0,r.jsx)(s.code,{children:"/etc/services"}),', like "ssh" or\n"echo") and "protocol" is one of "tcp", "udp", "sctp", or "dccp".\nEnabling or disabling a service that is already enabled or disabled will not\ncause an error.\nAttempting to enable/disable an unknown service name will cause this stage to\nfail. Known service names are determined by the contents of firewalld\'s\nconfiguration directories, usually ',(0,r.jsx)(s.code,{children:"/\\{lib,etc\\}/firewalld/services/*.xml"}),", and\nmay vary from release to release.\nWARNING: this stage uses ",(0,r.jsx)(s.code,{children:"chroot"})," to run ",(0,r.jsx)(s.code,{children:"firewall-offline-cmd"})," inside the\ntarget tree, which means it may fail unexpectedly when the buildhost and target\nare different arches or OSes."]}),"\n",(0,r.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "properties": {\n    "ports": {\n      "description": "Ports (or port ranges) to open",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A port or port range: \'portid[-portid]:protocol\'",\n        "pattern": ".:(tcp|udp|sctp|dccp)$"\n      }\n    },\n    "enabled_services": {\n      "description": "Network services to allow in the default firewall zone",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "Service name (from /{lib,etc}/firewalld/services/*.xml)"\n      }\n    },\n    "disabled_services": {\n      "description": "Network services to remove from the default firewall zone",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "Service name (from /{lib,etc}/firewalld/services/*.xml)"\n      }\n    },\n    "default_zone": {\n      "description": "Set default zone for connections and interfaces where no zone has been selected.",\n      "type": "string"\n    },\n    "zones": {\n      "description": "Bind a list of network sources to a zone to restrict traffic from those sources based on the settings of the zone.",\n      "type": "array",\n      "minItems": 1,\n      "items": {\n        "additionalProperties": false,\n        "type": "object",\n        "description": "configuration for each zone",\n        "required": [\n          "name",\n          "sources"\n        ],\n        "properties": {\n          "name": {\n            "type": "string",\n            "description": "name of the zone, if left empty the sources will apply to the default zone.",\n            "pattern": "^[a-zA-Z0-9_-]+$"\n          },\n          "sources": {\n            "type": "array",\n            "description": "list of sources for the zone",\n            "items": {\n              "additionalProperties": false,\n              "type": "string",\n              "description": "A source: <source>[/<mask>]|<MAC>|ipset:<ipset>"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:"{}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var o=n(96540);const r={},t=o.createContext(r);function i(e){const s=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(t.Provider,{value:s},e.children)}}}]);