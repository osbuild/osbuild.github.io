"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[6895],{14604:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.yum.repos","title":"org.osbuild.yum.repos","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.yum.repos.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.yum.repos","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.yum.repos","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.yum.repos.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.yum.repos.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.yum.config","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.yum.config"},"next":{"title":"org.osbuild.zip","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.zip"}}');var s=o(74848),i=o(28453);const r={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.yum.repos.meta.json"},p="org.osbuild.yum.repos",d={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"orgosbuildyumrepos",children:"org.osbuild.yum.repos"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create YUM / DNF repo file in /etc/yum.repos.d"})}),"\n",(0,s.jsx)(n.p,{children:"All repo-specific options, except the 'type' option, are supported. The 'type'\nrepo options is not supported, since it accepts only a single value, therefore\nthe ability to set it adds no value.\nOnly a subset of options which can be used in both, a repo or [main] section\nconfiguration, is supported, specifically:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"gpgcheck"}),"\n",(0,s.jsx)(n.li,{children:"repo_gpgcheck"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "definitions": {\n    "repo": {\n      "type": "object",\n      "additionalProperties": false,\n      "oneOf": [\n        {\n          "required": [\n            "id",\n            "baseurl"\n          ]\n        },\n        {\n          "required": [\n            "id",\n            "metalink"\n          ]\n        },\n        {\n          "required": [\n            "id",\n            "mirrorlist"\n          ]\n        }\n      ],\n      "description": "YUM / DNF repo definition.",\n      "properties": {\n        "id": {\n          "type": "string",\n          "description": "Repository ID.",\n          "pattern": "^[\\\\w.\\\\-:]+$"\n        },\n        "baseurl": {\n          "type": "array",\n          "description": "List of URLs for the repository.",\n          "minItems": 1,\n          "items": {\n            "type": "string",\n            "minLength": 1\n          }\n        },\n        "cost": {\n          "type": "integer",\n          "description": "The  relative  cost of accessing this repository, defaulting to 1000."\n        },\n        "enabled": {\n          "type": "boolean",\n          "description": "Include this repository as a package source."\n        },\n        "gpgkey": {\n          "type": "array",\n          "description": "URLs of a GPG key files that can be used for signing metadata and packages of this repository.",\n          "minItems": 1,\n          "items": {\n            "type": "string",\n            "minLength": 1\n          }\n        },\n        "metalink": {\n          "type": "string",\n          "description": "URL of a metalink for the repository.",\n          "minLength": 1\n        },\n        "mirrorlist": {\n          "type": "string",\n          "description": "URL of a mirrorlist for the repository.",\n          "minLength": 1\n        },\n        "module_hotfixes": {\n          "type": "boolean",\n          "description": "Set this to True to disable module RPM filtering and make all RPMs from the repository available."\n        },\n        "name": {\n          "type": "string",\n          "description": "A human-readable name of the repository. Defaults to the ID of the repository.",\n          "minLength": 1\n        },\n        "priority": {\n          "type": "integer",\n          "description": "The priority value of this repository."\n        },\n        "gpgcheck": {\n          "type": "boolean",\n          "description": "Whether to perform GPG signature check on packages found in this repository."\n        },\n        "repo_gpgcheck": {\n          "type": "boolean",\n          "description": "Whether to perform GPG signature check on this repository\'s metadata."\n        },\n        "sslverify": {\n          "type": "boolean",\n          "description": "Whether to verify SSL certificates on SSL connections."\n        }\n      }\n    }\n  },\n  "additionalProperties": false,\n  "description": "YUM / DNF repo file configuration.",\n  "properties": {\n    "filename": {\n      "type": "string",\n      "pattern": "^[\\\\w.-]{1,250}\\\\.repo$",\n      "description": "Repo file name."\n    },\n    "repos": {\n      "type": "array",\n      "description": "YUM / DNF repo definitions.",\n      "minItems": 1,\n      "items": {\n        "$ref": "#/definitions/repo"\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>p});var t=o(96540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);