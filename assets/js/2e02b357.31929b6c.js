"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[6039],{16052:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.sysconfig","title":"org.osbuild.sysconfig","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.sysconfig.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.sysconfig","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.sysconfig","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.sysconfig.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.sysconfig.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.sshd.config","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.sshd.config"},"next":{"title":"org.osbuild.sysctld","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.sysctld"}}');var o=s(74848),t=s(28453);const r={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.sysconfig.meta.json"},l="org.osbuild.sysconfig",d={},c=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"orgosbuildsysconfig",children:"org.osbuild.sysconfig"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Configure sysconfig files"})}),"\n",(0,o.jsx)(n.p,{children:"The sysconfig directory contains a variety of system configuration files.\nThe values found in each of the configuration files may need to be specified\nbefore first boot.\nCurrently, only the kernel and network configs can be modified.\nKernel supports the params:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"update_default(UPDATEDEFAULT) of type boolean"}),"\n",(0,o.jsx)(n.li,{children:"default_kernel(DEFAULTKERNEL) of type string\nNetwork supports the params:"}),"\n",(0,o.jsx)(n.li,{children:"networking(NETWORKING) of type boolean"}),"\n",(0,o.jsx)(n.li,{children:"no_zero_conf(NOZEROCONF) of type boolean\nNetwork-scripts supports the params:"}),"\n",(0,o.jsxs)(n.li,{children:["ifcfg - this parameter allows creation of 'ifcfg-*' files under\n'network-scripts' subdirectory. 'ifcfg' type is object (dictionary) with\nall of its keys specifying the interface name and resulting in creation\nof configuration files with the same name and prefix 'ifcfg-'.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Network interface name constraints are:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"maximum length of IFNAMSIZ (including the terminating null byte)"}),"\n",(0,o.jsx)(n.li,{children:"name accepted by dev_valid_name() function from kernel net/core/dev.c"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Currently supported subset of configuration options in ifcfg files is:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["bootproto(BOOTPROTO) of type string with allowed values:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"none"}),"\n",(0,o.jsx)(n.li,{children:"bootp"}),"\n",(0,o.jsx)(n.li,{children:"dhcp"}),"\n",(0,o.jsx)(n.li,{children:"static"}),"\n",(0,o.jsx)(n.li,{children:"ibft"}),"\n",(0,o.jsx)(n.li,{children:"autoip"}),"\n",(0,o.jsx)(n.li,{children:"shared"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"device(DEVICE) of type string"}),"\n",(0,o.jsx)(n.li,{children:"ipv6init(IPV6INIT) of type boolean"}),"\n",(0,o.jsx)(n.li,{children:"onboot(ONBOOT) of type boolean"}),"\n",(0,o.jsx)(n.li,{children:"peerdns(PEERDNS) of type boolean"}),"\n",(0,o.jsxs)(n.li,{children:["type(TYPE) of type string with allowed values:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Ethernet"}),"\n",(0,o.jsx)(n.li,{children:"Wireless"}),"\n",(0,o.jsx)(n.li,{children:"InfiniBand"}),"\n",(0,o.jsx)(n.li,{children:"Bridge"}),"\n",(0,o.jsx)(n.li,{children:"Bond"}),"\n",(0,o.jsx)(n.li,{children:"Vlan"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"userctl(USERCTL) of type boolean\nThis stage will overwrite existing files."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "properties": {\n    "kernel": {\n      "additionalProperties": false,\n      "type": "object",\n      "description": "sysconfig kernel options",\n      "properties": {\n        "update_default": {\n          "type": "boolean",\n          "description": "This option makes a newly installed kernel as the default in the boot entry selection."\n        },\n        "default_kernel": {\n          "type": "string",\n          "description": "This option specifies what package type will be used as the default."\n        }\n      }\n    },\n    "network": {\n      "additionalProperties": false,\n      "type": "object",\n      "description": "sysconfig network options",\n      "properties": {\n        "networking": {\n          "type": "boolean",\n          "description": "Enables or disables networking"\n        },\n        "no_zero_conf": {\n          "type": "boolean",\n          "description": "Disables the zero configuration network suite"\n        }\n      }\n    },\n    "network-scripts": {\n      "additionalProperties": false,\n      "type": "object",\n      "description": "sysconfig network-scripts options",\n      "properties": {\n        "ifcfg": {\n          "additionalProperties": false,\n          "type": "object",\n          "description": "Keys are interface names, values are objects containing interface configuration.",\n          "patternProperties": {\n            "^[^/:.\\\\s]{1,2}[^/:\\\\s]{0,13}$": {\n              "additionalProperties": false,\n              "type": "object",\n              "properties": {\n                "bootproto": {\n                  "type": "string",\n                  "enum": [\n                    "none",\n                    "bootp",\n                    "dhcp",\n                    "static",\n                    "ibft",\n                    "autoip",\n                    "shared"\n                  ],\n                  "description": "Method used for IPv4 protocol configuration."\n                },\n                "device": {\n                  "type": "string",\n                  "description": "Interface name of the device."\n                },\n                "ipv6init": {\n                  "type": "boolean",\n                  "description": "Whether to initialize this device for IPv6 addressing."\n                },\n                "onboot": {\n                  "type": "boolean",\n                  "description": "Whether the connection should be autoconnected."\n                },\n                "peerdns": {\n                  "type": "boolean",\n                  "description": "Whether to modify /etc/resolv.conf."\n                },\n                "type": {\n                  "type": "string",\n                  "enum": [\n                    "Ethernet",\n                    "Wireless",\n                    "InfiniBand",\n                    "Bridge",\n                    "Bond",\n                    "Vlan"\n                  ],\n                  "description": "Base type of the connection."\n                },\n                "userctl": {\n                  "type": "boolean",\n                  "description": "Whether non-root users are allowed to control the device."\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    "livesys": {\n      "additionalProperties": false,\n      "type": "object",\n      "required": [\n        "session"\n      ],\n      "properties": {\n        "session": {\n          "type": "string",\n          "description": "Livesys session to use"\n        }\n      }\n    },\n    "desktop": {\n      "additionalProperties": false,\n      "type": "object",\n      "anyOf": [\n        {\n          "required": [\n            "preferred"\n          ]\n        },\n        {\n          "required": [\n            "displaymanager"\n          ]\n        }\n      ],\n      "properties": {\n        "preferred": {\n          "type": "string",\n          "description": "Preferred desktop to use."\n        },\n        "displaymanager": {\n          "type": "string",\n          "description": "Displaymanager to use."\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(96540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);