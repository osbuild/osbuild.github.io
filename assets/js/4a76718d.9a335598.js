"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[8405],{44288:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"on-premises/installation/managing-repositories","title":"Managing repositories","description":"There are two kinds of repositories used in osbuild-composer:","source":"@site/docs/on-premises/01-installation/managing-repositories.md","sourceDirName":"on-premises/01-installation","slug":"/on-premises/installation/managing-repositories","permalink":"/docs/on-premises/installation/managing-repositories","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild.github.io/tree/main/docs/on-premises/01-installation/managing-repositories.md","tags":[],"version":"current","frontMatter":{},"sidebar":"onPremises","previous":{"title":"Container registry credentials","permalink":"/docs/on-premises/installation/container-auth"},"next":{"title":"Using the commandline","permalink":"/docs/on-premises/commandline/"}}');var i=r(74848),o=r(28453);const t={},c="Managing repositories",a={},d=[{value:"Custom 3rd party repositories",id:"custom-3rd-party-repositories",level:2},{value:"Using sources with specific distributions",id:"using-sources-with-specific-distributions",level:3},{value:"Verifying Repository Metadata with GPG",id:"verifying-repository-metadata-with-gpg",level:3},{value:"Official repository overrides",id:"official-repository-overrides",level:2},{value:"Defining official repository overrides",id:"defining-official-repository-overrides",level:3},{value:"Using repositories that require subscription",id:"using-repositories-that-require-subscription",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"managing-repositories",children:"Managing repositories"})}),"\n",(0,i.jsx)(s.p,{children:"There are two kinds of repositories used in osbuild-composer:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Custom 3rd party repositories"})," - use these to include packages that are not available in the official Fedora or RHEL repositories."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Official repository overrides"})," - use these if you want to download base system RPMs from elsewhere than the official repositories. For example if you have a custom mirror in your network. Keep in mind that this will ",(0,i.jsx)(s.strong,{children:"disable the default repositories"}),", so the mirror must contain all necessary packages!"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"custom-3rd-party-repositories",children:"Custom 3rd party repositories"}),"\n",(0,i.jsxs)(s.p,{children:["These are managed using ",(0,i.jsx)(s.code,{children:"composer-cli"})," (see the manpage for complete reference). To add a new repository, create a ",(0,i.jsx)(s.code,{children:"TOML"})," file like this:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-toml",children:'id = "k8s"\nname = "Kubernetes"\ntype = "yum-baseurl"\nurl = "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"\ncheck_gpg = false\ncheck_ssl = false\n'})}),"\n",(0,i.jsxs)(s.p,{children:["and add it using ",(0,i.jsx)(s.code,{children:"composer-cli sources add <file-name.toml>"}),". Verify its presence using ",(0,i.jsx)(s.code,{children:"composer-cli sources list"})," and its content using ",(0,i.jsx)(s.code,{children:"composer-cli sources info <id>"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Valid values for the ",(0,i.jsx)(s.code,{children:"type"})," field are: ",(0,i.jsx)(s.code,{children:"yum-baseurl"}),", ",(0,i.jsx)(s.code,{children:"yum-mirrorlist"}),", and ",(0,i.jsx)(s.code,{children:"yum-metalink"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"using-sources-with-specific-distributions",children:"Using sources with specific distributions"}),"\n",(0,i.jsx)(s.p,{children:"A new optional field has been added to the repository source format. It is a\nlist of distribution strings that the source will be used with when depsolving\nand building images."}),"\n",(0,i.jsxs)(s.p,{children:["Sources with no ",(0,i.jsx)(s.code,{children:"distros"})," will be used with all composes. If you want to use a\nsource for a specific distro you set the ",(0,i.jsx)(s.code,{children:"distros"})," list to the distro name(s)\nto use it with."]}),"\n",(0,i.jsx)(s.p,{children:"eg. A source that is only used when depsolving or building fedora 32:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-toml",children:'check_gpg = true\ncheck_ssl = true\ndistros = ["fedora-32"]\nid = "f32-local"\nname = "local packages for fedora32"\ntype = "yum-baseurl"\nurl = "http://local/repos/fedora32/projectrepo/"\n'})}),"\n",(0,i.jsx)(s.p,{children:"This source will be used for any requests that specify fedora-32, eg. listing\npackages and specifying fedora-32 will include this source, but listing\npackages for the host distro will not."}),"\n",(0,i.jsx)(s.h3,{id:"verifying-repository-metadata-with-gpg",children:"Verifying Repository Metadata with GPG"}),"\n",(0,i.jsxs)(s.p,{children:["In addition to checking the GPG signature on rpm packages, DNF can check that\nrepository metadata has been signed with a GPG key. You can setup such a\nrepository yourself by signing your ",(0,i.jsx)(s.code,{children:"repomd.xml"})," file after you have run\n",(0,i.jsx)(s.code,{children:"createrepo_c"})," on your repository. For example:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"cd repo/\ncreaterepo_c .\ncd repodata/\ngpg -u YOUR-GPG-KEY-EMAIL --yes --detach-sign --armor repomd.xml\n"})}),"\n",(0,i.jsxs)(s.p,{children:["In order to check this signature you need to tell osbuild-composer what gpg key\nto use to do the check.  Set ",(0,i.jsx)(s.code,{children:"check_repogpg = true"})," in the source, and if the\nkey is available over https, set the ",(0,i.jsx)(s.code,{children:"gpgkeys"})," entry to the URL for the key,\nlike this:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-toml",children:'check_gpg = true\ncheck_ssl = true\nid = "custom-local"\nname = "signed local packages"\ntype = "yum-baseurl"\nurl = "https://local/repos/projectrepo/"\ncheck_repogpg = true\ngpgkeys=["https://local/keys/repokey.pub"]\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Normally you would want to distribute the key via a separate channel from the\nrpms for better security, the above is just an example. You can also embed the\nwhole key into the source ",(0,i.jsx)(s.code,{children:"gpgkeys"})," entry. If the entry starts with ",(0,i.jsx)(s.code,{children:"-----BEGIN PGP PUBLIC KEY BLOCK-----"})," it will import it directly instead of fetching it\nfrom the url. For example:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-toml",children:'check_gpg = true\ncheck_ssl = true\ncheck_repogpg\nid = "custom-local"\nname = "signed local packages"\ntype = "yum-baseurl"\nurl = "https://local/repos/projectrepo/"\ngpgkeys=["https://remote/keys/other-repokey.pub",\n\'\'\'-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nmQENBEt+xXMBCACkA1ZtcO4H7ZUG/0aL4RlZIozsorXzFrrTAsJEHvdy+rHCH3xR\ncFz6IMbfCOdV+oKxlDP7PS0vWKfqxwkenOUut5o9b32uDdFMW4IbFXEQ94AuSQpS\njo8PlVMm/51pmmRxdJzyPnr0YD38mVK6qUEYLI/4zXSgFk493GT8Y4m3N18O/+ye\nPnOOItj7qbrCMASoBx1TG8Zdg8ufehMnfb85x4xxAebXkqJQpEVTjt4lj4p6BhrW\nR+pIW/nBUrz3OsV7WwPKjSLjJtTJFxYX+RFSCqOdfusuysoOxpIHOx1WxjGUOB5j\nfnhmq41nWXf8ozb58zSpjDrJ7jGQ9pdUpAtRABEBAAG0HkJyaWFuIEMuIExhbmUg\nPGJjbEByZWRoYXQuY29tPokBOAQTAQIAIgUCS37FcwIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQEX6MFo7+On9dgAf9Hi2K1MKcmLkDeSUIXkXIAw0nAzl2\nUDGLWEdDqAgFxP6UaCVtOIRCr7z4EDOQoxD7mkdekbH2W5GcTO4h8MQBHYD9EkY7\nH/lTKchlFfsmafOoA3Y/tDLPKu+OIfH9Mqn2Mf7wMYGrnWSRNKYgvC5zkMgkhoPU\nmSPPHyBabsdS/Kg5ZAf43ac/MXY9V8Mk6zqbBlj6QYqjJ0nBD6vwozrDQ5gJtDUL\nmQho13zPn4lBJl9YJVjcgRB2WbzgSZOln0DfV22Seai66vnr5NyaOIw5B9QLSNhN\nEaPFswEDLKCsns9dkDuGFX52/Mt/i7JySvwhMBqHElPzWmwCHeY45M8gBYhGBBAR\nAgAGBQJLfsbpAAoJECH7Y/6XEsLNuasAn0Q0jB4Ea/95EREUkCFTm9L6nOpAAJ9t\nQzwGXhrLFZzOdRWYiWcCQbX5/7kBDQRLfsVzAQgAvN5jr95pJthv2w9co9/7omhM\n5rAnr9WJfbMLLiUfPPUvpL24RGO6SKy03aiVTUjlaHc+cGqOciwnNKMCSt+noyG2\nkNnAESTDtCivpsjonaFP8jA3TqL0QK+yzBRKJnMnLEY1nWE1FtkMRccXvzi0Z/XQ\nVhiWQyTvDFoKtepBFrH9UqWbNHyki22aighumUsW01pcPH2ogSj+HR01r7SfI/y2\nEkE6loHQfCDycHmlqYV+X6GZEvf1qu2+EHEQChsHIAxWyshsxM/ZPmx/8e5S3Xmj\nl7h/6E9wcsIpvnf504sLX5j4Km9I5HgJSRxHxgRPpqJ2/XiClAJanO5gCw0RdQAR\nAQABiQEfBBgBAgAJBQJLfsVzAhsMAAoJEBF+jBaO/jp/SqEH/iArzrfVOhZQGuy1\nKmG0+/FdJGqAEHP5HWpsaeYJok1VmhTPZd4IVFBz/bGJYyvsrPU0pJ6QLkdGxNnb\nKulJocgkW5MKEL/CRc54ESKwYngigmbY4qLwhS+gB3BJg1TvoHD810MSj4wdxNNo\n6JQmFmuoDsLRwaRYbKQDz95XXoGQtmV1o57T05WkLuC5OmHqnWv3rggVC8madpUJ\nmoUUvUWgU1qyXe3PrgMGFOibWIl7lPZ08nzKXBRvSK/xoTGxl+570AevfVHMu5Uk\nYu2U6D6/DYohtTYp0s1ekS5KQkCJM7lfqecDsQhfVfOfR0w4aF8k8u3HmWdOfUz+\n9+2ZsBo=\n=myjM\n-----END PGP PUBLIC KEY BLOCK-----\'\'\']\n'})}),"\n",(0,i.jsx)(s.p,{children:"Notice that gpgkeys can take as many key urls and keys as you need, not just one.\nIf the signature cannot be found an error similar to this will be returned:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"GPG verification is enabled, but GPG signature is not available.\nThis may be an error or the repository does not support GPG verification:\nStatus code: 404 for http://repo-server/fedora/repodata/repomd.xml.asc (IP: 192.168.1.3)\n"})}),"\n",(0,i.jsx)(s.p,{children:"And if the signature is invalid:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"repomd.xml GPG signature verification error: Bad GPG signature\n"})}),"\n",(0,i.jsxs)(s.p,{children:["You can test the signature of the repository manually by running ",(0,i.jsx)(s.code,{children:"gpg --verify repomd.xml.asc"}),"\nto help troubleshoot problems."]}),"\n",(0,i.jsx)(s.h2,{id:"official-repository-overrides",children:"Official repository overrides"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"osbuild-composer"})," does not inherit the system repositories located in ",(0,i.jsx)(s.code,{children:"/etc/yum.repos.d/"}),". Instead, it has its own set of official repositories defined in ",(0,i.jsx)(s.code,{children:"/usr/share/osbuild-composer/repositories"}),". To override the official repositories, define overrides in ",(0,i.jsx)(s.code,{children:"/etc/osbuild-composer/repositories"}),". This directory is meant for user defined overrides and the files located here take precedence over those in ",(0,i.jsx)(s.code,{children:"/usr"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:['The configuration files are not in the usual "repo" format. Instead, they are simple ',(0,i.jsx)(s.code,{children:"JSON"})," files."]}),"\n",(0,i.jsx)(s.h3,{id:"defining-official-repository-overrides",children:"Defining official repository overrides"}),"\n",(0,i.jsx)(s.p,{children:"To set your own repositories, create this directory if it does not exist already:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"$ sudo mkdir -p /etc/osbuild-composer/repositories\n"})}),"\n",(0,i.jsx)(s.p,{children:"Based on the system you want to build an image for, determine the name of a new JSON file:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Fedora 32 - ",(0,i.jsx)(s.code,{children:"fedora-32.json"})]}),"\n",(0,i.jsxs)(s.li,{children:["Fedora 33 - ",(0,i.jsx)(s.code,{children:"fedora-33.json"})]}),"\n",(0,i.jsxs)(s.li,{children:["RHEL 8.4 - ",(0,i.jsx)(s.code,{children:"rhel-8.4.json"})," (",(0,i.jsx)(s.code,{children:"rhel-84.json"})," if you are using osbuild-composer prior to version 100)"]}),"\n",(0,i.jsxs)(s.li,{children:["RHEL 9.0 - ",(0,i.jsx)(s.code,{children:"rhel-9.0.json"})," (",(0,i.jsx)(s.code,{children:"rhel-90.json"})," if you are using osbuild-composer prior to version 100)"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Note that ",(0,i.jsx)(s.strong,{children:"osbuild-composer prior to version 100"})," didn't use a dot ",(0,i.jsx)(s.code,{children:"."})," to separate major and minor release versions in the repository file names. New versions are backward compatible, so they will still read the old file names of distributions supported up to the version 100. However, going forward, it is strongly advised to use the new naming scheme. Future distribution versions won't be backward compatible (e.g. ",(0,i.jsx)(s.code,{children:"rhel-100.json"})," won't work in the future for RHEL 10.0)."]}),"\n",(0,i.jsxs)(s.p,{children:["Then, create the JSON file with the following structure (or copy the file from ",(0,i.jsx)(s.code,{children:"/usr/share/osbuild-composer/"})," and modify its content):"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "<ARCH>": [\n        {\n            "name": "<REPO NAME>",\n            "metalink": "",\n            "baseurl": "",\n            "mirrorlist": "",\n            "gpgkey": "",\n            "check_gpg": "",\n            "metadata_expire": "",\n        }\n    ]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Specify only one of the following attributes: ",(0,i.jsx)(s.code,{children:"metalink"}),", ",(0,i.jsx)(s.code,{children:"mirrorlist"}),", or ",(0,i.jsx)(s.code,{children:"baseurl"}),". All the remaining fields like ",(0,i.jsx)(s.code,{children:"gpgkey"}),", ",(0,i.jsx)(s.code,{children:"metadata_expire"}),", etc. are optional."]}),"\n",(0,i.jsxs)(s.p,{children:["For example, for building a Fedora 33 image running on x86_64, create ",(0,i.jsx)(s.code,{children:"/etc/osbuild-composer/repositories/fedora-33.json"})," with this content:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "x86_64": [\n        {\n            "name": "fedora",\n            "metalink": "https://mirrors.fedoraproject.org/metalink?repo=fedora-33&arch=x86_64",\n            "gpgkey": "-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\nmQINBF4wBvsBEADQmcGbVUbDRUoXADReRmOOEMeydHghtKC9uRs9YNpGYZIB+bie\\nbGYZmflQayfh/wEpO2W/IZfGpHPL42V7SbyvqMjwNls/fnXsCtf4LRofNK8Qd9fN\\nkYargc9R7BEz/mwXKMiRQVx+DzkmqGWy2gq4iD0/mCyf5FdJCE40fOWoIGJXaOI1\\nTz1vWqKwLS5T0dfmi9U4Tp/XsKOZGvN8oi5h0KmqFk7LEZr1MXarhi2Va86sgxsF\\nQcZEKfu5tgD0r00vXzikoSjn3qA5JW5FW07F1pGP4bF5f9J3CZbQyOjTSWMmmfTm\\n2d2BURWzaDiJN9twY2yjzkoOMuPdXXvovg7KxLcQerKT+FbKbq8DySJX2rnOA77k\\nUG4c9BGf/L1uBkAT8dpHLk6Uf5BfmypxUkydSWT1xfTDnw1MqxO0MsLlAHOR3J7c\\noW9kLcOLuCQn1hBEwfZv7VSWBkGXSmKfp0LLIxAFgRtv+Dh+rcMMRdJgKr1V3FU+\\nrZ1+ZAfYiBpQJFPjv70vx+rGEgS801D3PJxBZUEy4Ic4ZYaKNhK9x9PRQuWcIBuW\\n6eTe/6lKWZeyxCumLLdiS75mF2oTcBaWeoc3QxrPRV15eDKeYJMbhnUai/7lSrhs\\nEWCkKR1RivgF4slYmtNE5ZPGZ/d61zjwn2xi4xNJVs8q9WRPMpHp0vCyMwARAQAB\\ntDFGZWRvcmEgKDMzKSA8ZmVkb3JhLTMzLXByaW1hcnlAZmVkb3JhcHJvamVjdC5v\\ncmc+iQI4BBMBAgAiBQJeMAb7AhsPBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\\nCRBJ/XdJlXD/MZm2D/9kriL43vd3+0DNMeA82n2v9mSR2PQqKny39xNlYPyy/1yZ\\nP/KXoa4NYSCA971LSd7lv4n/h5bEKgGHxZfttfOzOnWMVSSTfjRyM/df/NNzTUEV\\n7ORA5GW18g8PEtS7uRxVBf3cLvWu5q+8jmqES5HqTAdGVcuIFQeBXFN8Gy1Jinuz\\nAH8rJSdkUeZ0cehWbERq80BWM9dhad5dW+/+Gv0foFBvP15viwhWqajr8V0B8es+\\n2/tHI0k86FAujV5i0rrXl5UOoLilO57QQNDZH/qW9GsHwVI+2yecLstpUNLq+EZC\\nGqTZCYoxYRpl0gAMbDLztSL/8Bc0tJrCRG3tavJotFYlgUK60XnXlQzRkh9rgsfT\\nEXbQifWdQMMogzjCJr0hzJ+V1d0iozdUxB2ZEgTjukOvatkB77DY1FPZRkSFIQs+\\nfdcjazDIBLIxwJu5QwvTNW8lOLnJ46g4sf1WJoUdNTbR0BaC7HHj1inVWi0p7IuN\\n66EPGzJOSjLK+vW+J0ncPDEgLCV74RF/0nR5fVTdrmiopPrzFuguHf9S9gYI3Zun\\nYl8FJUu4kRO6JPPTicUXWX+8XZmE94aK14RCJL23nOSi8T1eW8JLW43dCBRO8QUE\\nAso1t2pypm/1zZexJdOV8yGME3g5l2W6PLgpz58DBECgqc/kda+VWgEAp7rO2A==\\n=EPL3\\n-----END PGP PUBLIC KEY BLOCK-----\\n",\n            "check_gpg": true\n        }\n    ]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["After you have created repository overrides in ",(0,i.jsx)(s.code,{children:"/etc/osbuild-composer/repositories"}),", you must restart the ",(0,i.jsx)(s.code,{children:"osbuild-composer"})," service in order for the overrides to take effect."]}),"\n",(0,i.jsx)(s.h2,{id:"using-repositories-that-require-subscription",children:"Using repositories that require subscription"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"osbuild-composer"})," can use subscriptions from the host system if they are configured in the appropriate file in ",(0,i.jsx)(s.code,{children:"/etc/osbuild-composer/repositories"}),". To enable such repository, copy the ",(0,i.jsx)(s.code,{children:"baseurl"})," from ",(0,i.jsx)(s.code,{children:"/etc/yum.repos.d/redhat.repo"})," and paste it into the JSON repository definition. Then allow RHSM support using ",(0,i.jsx)(s.code,{children:'"rhsm": true'})," like this:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "x86_64": [\n    {\n      "baseurl": "https://localhost/repo",\n      "gpgkey": "...",\n      "rhsm": true\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"osbuild-composer"})," will read the ",(0,i.jsx)(s.code,{children:"/etc/yum.repos.d/redhat.repo"})," file from the host system and use it as a source of subscriptions. The same subscriptions must be available on a remote worker, if used."]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>t,x:()=>c});var n=r(96540);const i={},o=n.createContext(i);function t(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);