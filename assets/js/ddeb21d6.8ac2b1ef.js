"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[32471],{34817:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"developer-guide/projects/osbuild/modules/stages/org.osbuild.bootc.install.config","title":"org.osbuild.bootc.install.config","description":"\x3c!--","source":"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.bootc.install.config.md","sourceDirName":"developer-guide/02-projects/osbuild/modules/stages","slug":"/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootc.install.config","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootc.install.config","draft":false,"unlisted":false,"editUrl":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.bootc.install.config.meta.json","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.bootc.install.config.meta.json"},"sidebar":"developer","previous":{"title":"org.osbuild.bootc.install-to-filesystem","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootc.install-to-filesystem"},"next":{"title":"org.osbuild.bootiso.mono","permalink":"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootiso.mono"}}');var t=o(74848),i=o(28453);const r={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.bootc.install.config.meta.json"},l="org.osbuild.bootc.install.config",a={},d=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"orgosbuildbootcinstallconfig",children:"org.osbuild.bootc.install.config"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Write bootc-install-config(5) file"})}),"\n",(0,t.jsxs)(n.p,{children:["The bootc install process supports some basic customization. This\nconfiguration file is in TOML format, and will be discovered by the\ninstallation process via drop-in files in ",(0,t.jsx)(n.code,{children:"/usr/lib/bootc/install"})," that\nare processed in alphanumerical order.\nThe individual files are merged into a single final installation config, so\nit is supported for e.g. a container base image to provide a default root\nfilesystem type, that can be overridden in a derived container image."]}),"\n",(0,t.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "required": [\n    "filename",\n    "config"\n  ],\n  "properties": {\n    "filename": {\n      "type": "string",\n      "description": "name of the configuration file."\n    },\n    "config": {\n      "additionalProperties": false,\n      "type": "object",\n      "minProperties": 1,\n      "properties": {\n        "install": {\n          "type": "object",\n          "additionalProperties": false,\n          "minProperties": 1,\n          "properties": {\n            "filesystem": {\n              "type": "object",\n              "required": [\n                "root"\n              ],\n              "additionalProperties": false,\n              "properties": {\n                "root": {\n                  "type": "object",\n                  "required": [\n                    "type"\n                  ],\n                  "additionalProperties": false,\n                  "properties": {\n                    "type": {\n                      "type": "string"\n                    }\n                  }\n                }\n              }\n            },\n            "kargs": {\n              "type": "array",\n              "description": "Append extra kernel arguments",\n              "items": {\n                "type": "string"\n              }\n            },\n            "block": {\n              "type": "array",\n              "description": "An array of supported to-disk backends enabled by this base container image; if not specified, this will just be direct.",\n              "items": {\n                "type": "string",\n                "enum": [\n                  "direct",\n                  "tmp2-luks"\n                ]\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var s=o(96540);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);